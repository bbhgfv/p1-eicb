digraph {
node [shape=Mrecord, style=filled, fillcolor=white, fontname="Calibri"];
graph [ordering=out, nodesep=0.3, ranksep=1];

# SimpleNode VoidType
node0 [label="VoidType", tooltip="VoidType"]

# DeclarationLiteral main
node1 [shape=box, label="main", fillcolor="#cccccc", tooltip="main"]

# ReferenceLiteral i
node2 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# Literal 0
node3 [shape=box, label="0", fillcolor="#cccccc", tooltip="0"]

# SimpleNode IntLiteral
node4:s -> node3:n
node4 [label="IntLiteral", tooltip="IntLiteral"]

# ReferenceLiteral i
node5 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# SimpleNode Identifier
node6:s -> node5:n
node6 [label="Identifier", tooltip="Identifier"]

# Literal <
node7 [shape=box, label="<", fillcolor="#cccccc", tooltip="<"]

# Literal 5
node8 [shape=box, label="5", fillcolor="#cccccc", tooltip="5"]

# SimpleNode IntLiteral
node9:s -> node8:n
node9 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Compare
node10:p0:s -> node6:n
node10:p1:s -> node7:n
node10:p2:s -> node9:n
node10 [label="{Compare|{<p0>Left|<p1>Op|<p2>Right}}", tooltip="Compare"]

# ReferenceLiteral i
node11 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# SimpleNode Identifier
node12:s -> node11:n
node12 [label="Identifier", tooltip="Identifier"]

# Literal ==
node13 [shape=box, label="==", fillcolor="#cccccc", tooltip="=="]

# Literal 2
node14 [shape=box, label="2", fillcolor="#cccccc", tooltip="2"]

# SimpleNode IntLiteral
node15:s -> node14:n
node15 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Compare
node16:p0:s -> node12:n
node16:p1:s -> node13:n
node16:p2:s -> node15:n
node16 [label="{Compare|{<p0>Left|<p1>Op|<p2>Right}}", tooltip="Compare"]

# ReferenceLiteral printInt
node17 [shape=box, label="printInt", fillcolor="#cccccc", tooltip="printInt"]

# Literal 42
node18 [shape=box, label="42", fillcolor="#cccccc", tooltip="42"]

# SimpleNode IntLiteral
node19:s -> node18:n
node19 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Call
node20:p0:s -> node17:n
node20:p1_0:s -> node19:n
node20 [label="{Call|{<p0>Function|{Arguments|{<p1_0>1}}}}", tooltip="Call"]

# PortNode CallStatement
node21:p0:s -> node20:n
node21 [label="{CallStatement|{<p0>CallExpr}}", tooltip="CallStatement"]

# ReferenceLiteral printInt
node22 [shape=box, label="printInt", fillcolor="#cccccc", tooltip="printInt"]

# ReferenceLiteral i
node23 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# SimpleNode Identifier
node24:s -> node23:n
node24 [label="Identifier", tooltip="Identifier"]

# PortNode Call
node25:p0:s -> node22:n
node25:p1_0:s -> node24:n
node25 [label="{Call|{<p0>Function|{Arguments|{<p1_0>1}}}}", tooltip="Call"]

# PortNode CallStatement
node26:p0:s -> node25:n
node26 [label="{CallStatement|{<p0>CallExpr}}", tooltip="CallStatement"]

# PortNode If
node27:p0:s -> node16:n
node27:p1:s -> node21:n
node27:p2:s -> node26:n
node27 [label="{If|{<p0>Condition|<p1>Then|<p2>Else}}", tooltip="If"]

# ReferenceLiteral i
node28 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# ReferenceLiteral i
node29 [shape=box, label="i", fillcolor="#cccccc", tooltip="i"]

# SimpleNode Identifier
node30:s -> node29:n
node30 [label="Identifier", tooltip="Identifier"]

# Literal 1
node31 [shape=box, label="1", fillcolor="#cccccc", tooltip="1"]

# SimpleNode IntLiteral
node32:s -> node31:n
node32 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Addition
node33:p0:s -> node30:n
node33:p1:s -> node32:n
node33 [label="{Addition|{<p0>Left|<p1>Right}}", tooltip="Addition"]

# ReferenceLiteral k
node34 [shape=box, label="k", fillcolor="#cccccc", tooltip="k"]

# SimpleNode Identifier
node35:s -> node34:n
node35 [label="Identifier", tooltip="Identifier"]

# PortNode Subtraction
node36:p0:s -> node33:n
node36:p1:s -> node35:n
node36 [label="{Subtraction|{<p0>Left|<p1>Right}}", tooltip="Subtraction"]

# PortNode ForLoop
node37:p0_0:s -> node2:n
node37:p0_1:s -> node4:n
node37:p1:s -> node10:n
node37:p2:s -> node27:n
node37:p3_0:s -> node28:n
node37:p3_1:s -> node36:n
node37 [label="{ForLoop|{{Init|{<p0_0>Target|<p0_1>Value}}|<p1>Condition|<p2>Body|{Inc|{<p3_0>Target|<p3_1>Value}}}}", tooltip="ForLoop"]

# PortNode Function
node38:p0:s -> node0:n
node38:p1:s -> node1:n
node38:p3_0:s -> node37:n
node38 [label="{Function|{<p0>ReturnType|<p1>Name|{Parameters|{}}|{Statements|{<p3_0>1}}}}", tooltip="Function"]

# PortNode Module
node39:p1_0:s -> node38:n
node39 [label="{Module|{{Records|{}}|{Functions|{<p1_0>1}}}}", tooltip="Module"]

}
